apply plugin: 'com.android.application'
//apply plugin: 'hugo'

// keystorePropertiesFile 변수를 만들고 프로젝트 폴더의 keystore.properties 파일로 초기화 한다.
def keystorePropertiesFile = rootProject.file("keystore.properties")
// keystoreProperties 변수를 만들고 Properties() 객체를 초기화 한다.
def keystoreProperties = new Properties()
// keystore.properties 파일을 keystoreProperties 객체에 로드한다.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
  compileSdkVersion 28
  defaultConfig {
    applicationId "io.github.ovso.righttoknow"
    minSdkVersion 21
    targetSdkVersion 28
    //multiDexEnabled true
    versionCode 87

    int versionMajor = 0
    int versionMinor = 0
    int versionPatch = versionCode

    if (1000 > versionPatch && versionPatch > 99) {
      versionMajor = versionPatch / 100
      versionMinor = (versionPatch % 100) / 10
      versionPatch = (versionPatch % 100) % 10
    } else if (100 > versionCode && versionPatch > 9) {
      versionMajor = 0
      versionMinor = versionPatch / 10
      versionPatch = versionPatch % 10
    } else if (versionPatch < 10) {
      versionMajor = 0
      versionMinor = 0
      versionPatch = versionPatch / 1
    }

    versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  lintOptions {
    abortOnError false
  }
  signingConfigs {
    release {
      keyAlias keystoreProperties['keyAlias']
      storePassword keystoreProperties['storePassword']
      keyPassword keystoreProperties['keyPassword']
      storeFile file(keystoreProperties['storeFile'])
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      useProguard false
      shrinkResources false
      proguardFile getDefaultProguardFile('proguard-android.txt')
      proguardFile 'proguard-rules.pro'
      proguardFile 'proguard-firebase.pro'
      proguardFile 'proguard-butterknipe.pro'
      proguardFile 'proguard-pdfviewer.pro'
      proguardFile 'proguard-avloading.pro'
      proguardFile 'proguard-glide.pro'
      proguardFile 'proguard-retrofit.pro'
      proguardFile 'proguard-okhttp.pro'
      proguardFile 'proguard-dagger.pro'
      proguardFile 'proguard-jsoup.pro'
      proguardFile 'proguard-lombok.pro'

      signingConfig signingConfigs.release

      android.applicationVariants.all { variant ->
        variant.outputs.all {
          def formattedDate = new Date().format('yyyyMMddHHmmss')
          def appName = variant.getApplicationId().split(/[.]/)[3]
          outputFileName =
              "${appName}-${variant.name}-${variant.versionCode}-${variant.versionName}-${formattedDate}.apk"
        }
      }
    }
    debug {
    }
  }

  lintOptions {
    disable 'LongLogTag'
  }

  compileOptions {
    targetCompatibility JavaVersion.VERSION_1_8
    sourceCompatibility JavaVersion.VERSION_1_8
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation files('libs/YouTubeAndroidPlayerApi.jar')

  // test
  androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  testImplementation "junit:junit:$junit_version"

  // support
  implementation "com.android.support:appcompat-v7:$support_library_version"
  implementation "com.android.support:customtabs:$support_library_version"
  implementation "com.android.support:design:$support_library_version"
  implementation "com.android.support:cardview-v7:$support_library_version"
  implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"

  // location
  implementation "com.google.android.gms:play-services-location:$play_services_version"
  implementation "com.google.android.gms:play-services-maps:$play_services_version"

  // butter knife
  implementation "com.jakewharton:butterknife:$butterknife_version"
  annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_version"

  // debug
  implementation "com.jakewharton.timber:timber:$timber_version"

  // firebase
  implementation "com.google.firebase:firebase-config:$firebase_config_version"
  implementation "com.google.firebase:firebase-ads:$firebase_ads_version"
  implementation "com.google.firebase:firebase-core:$firebase_core_version"
  implementation "com.google.firebase:firebase-database:$firebase_database_version"
  implementation "com.androidhuman.rxfirebase2:firebase-database:$rxfirebase_database_version"
  implementation "com.androidhuman.rxfirebase2:firebase-core:$rxfirebase_core_version"

  // rxjava
  implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
  implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
  implementation "com.jakewharton.rxbinding2:rxbinding:$rxbinding2_version"

  // network
  implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
  implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
  implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"

  compileOnly "org.projectlombok:lombok:$lombok_version"
  annotationProcessor "org.projectlombok:lombok:$lombok_version"

  implementation "de.psdev.licensesdialog:licensesdialog:$licensesdialog_version"
  implementation "com.miguelcatalan:materialsearchview:$materialsearchview_version"
  implementation "com.wang.avi:library:$avi_library_version"
  implementation "com.github.bumptech.glide:glide:$glide_version"
  annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
  implementation "org.jsoup:jsoup:$rootProject.jsoup_version"

  // pdf
  implementation "com.github.barteksc:android-pdf-viewer:$pdf_viewer_version"
  // downloader
  implementation "com.mindorks.android:prdownloader:$rootProject.prdownloader_version"

  // dagger2
  implementation "com.google.dagger:dagger:$dagger_version"
  implementation "com.google.dagger:dagger-android-support:$dagger_version"
  annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
  annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

  // joda-time
  implementation "net.danlew:android.joda:$joda_version"

  // guava
  implementation "com.google.guava:guava:$guava_version"

  // parceler
  implementation "org.parceler:parceler-api:$parceler_version"
  annotationProcessor "org.parceler:parceler:$parceler_version"

  // lottie
  implementation "com.airbnb.android:lottie:$lottie_version"
}

// Add to the bottom of the file
apply plugin: 'com.google.gms.google-services'

